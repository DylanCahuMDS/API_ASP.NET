// <auto-generated />
using System;
using APIMDS;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIMDS.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20230609123756_SaltDelete")]
    partial class SaltDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APIMDS.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PersonnageId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonnageId");

                    b.HasIndex("UserId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("APIMDS.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("ConversationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ConversationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("APIMDS.Personnage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UniversId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversId");

                    b.ToTable("Personnages");
                });

            modelBuilder.Entity("APIMDS.Univers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Univers");
                });

            modelBuilder.Entity("APIMDS.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("APIMDS.Conversation", b =>
                {
                    b.HasOne("APIMDS.Personnage", "Personnage")
                        .WithMany()
                        .HasForeignKey("PersonnageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIMDS.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personnage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("APIMDS.Message", b =>
                {
                    b.HasOne("APIMDS.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIMDS.Conversation", null)
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("APIMDS.Personnage", b =>
                {
                    b.HasOne("APIMDS.Univers", "Univers")
                        .WithMany("Personnages")
                        .HasForeignKey("UniversId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Univers");
                });

            modelBuilder.Entity("APIMDS.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("APIMDS.Univers", b =>
                {
                    b.Navigation("Personnages");
                });
#pragma warning restore 612, 618
        }
    }
}
